[package]
name = "rust_d3_geo_voronoi"
description="A port into rustlang of the javascript library d3-geo-voronoi"
authors = ["martin frances <martinfrances107@hotmail.com"]
repository="https://github.com/martinfrances107/rust_d3_geo_voronoi.git"
edition = "2018"
version = "0.1.0"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
num-traits = "0.2.14"
wasm-bindgen = "0.2.68" 
geo={path="../geo/geo"}
delaunator = { git = "https://github.com/mourner/delaunator-rs.git" }
# d3_geo: At the moment just use for math carteasian functions.
rust_d3_geo = { path = "../rust_d3_geo"}
rust_d3_array = { path = "../rust_d3_array" }
rust_d3_delaunay = { path = "../rust_d3_delaunay" }
# rust_d3_geo = { path = "../rust_d3_geo" }
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dependencies.web-sys]
version = "0.3.45"
features = [
    "Attr",
    "CanvasRenderingContext2d",
    "Document",
    "Element",
    "Event",
    "EventTarget",
    "HtmlCanvasElement",
    "HtmlElement",
    "HtmlInputElement",
    "Node",
    "Text",
    "Window"
]

[dev-dependencies]
approx="0.4.0"
measureme = "9.0.0"
pretty_assertions = "0.7.1"
wasm-bindgen-test="0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
